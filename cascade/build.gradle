apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.1'
    publishNonDefault true
    // Gradle work-around, comment#35 https://code.google.com/p/android/issues/detail?id=52962

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "0.3.8"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        // InvalidPackage is for Okio, https://github.com/square/okio/issues/58
        // OldTargetApi and GradleDependency are for API23 when API24 is available (but not yet supported by CI)
        disable 'InvalidPackage', 'OldTargetApi', 'GradleDependency'
    }

    packagingOptions {
        exclude "LICENSE.txt" // For com.android.support.test:runner:0.2
    }

    dexOptions {
        incremental false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

// Lint configuration
allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:support-annotations:24.2.0'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.jmockit:jmockit:1.22'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
}

// JavaDoc configuration
android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        //noinspection GroovyAssignabilityCheck
        classpath = files(variant.javaCompile.classpath.files) + files(android.bootClasspath)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://developer.android.com/reference");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}
