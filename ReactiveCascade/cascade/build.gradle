apply plugin: 'com.android.library'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 23
    buildToolsVersion '24.0.0 rc2'
    publishNonDefault true
    // Gradle work-around, comment#35 https://code.google.com/p/android/issues/detail?id=52962

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion "N"
        versionCode 1
        versionName "0.3.6"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'InvalidPackage' // For Okio, https://github.com/square/okio/issues/58
        abortOnError false   // For RetroLambda, remove when possible
    }

    packagingOptions {
        exclude "LICENSE.txt" // For com.android.support.test:runner:0.2
    }

    dexOptions {
        incremental false
    }
}

// Lint configuration
allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:23.2.1"
    compile "com.android.support:support-annotations:23.2.1"
    compile 'com.squareup.okhttp3:okhttp:3.2.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.3.0'

    androidTestCompile 'com.android.support.test:runner:0.4.1'
    androidTestCompile 'org.assertj:assertj-core:2.3.0'
}

// JavaDoc configuration
android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        //noinspection GroovyAssignabilityCheck
        classpath = files(variant.javaCompile.classpath.files) + files(android.bootClasspath)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.links("http://developer.android.com/reference");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}
